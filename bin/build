#!/bin/bash

PATH=$(npm bin):$PATH

dest="dist";

[ ! -d "./$dest" ] && mkdir "$dest";
rm -rf ./$dest/*

pushd node_modules
if [ -e kiubi ]; then
 	rm kiubi;
fi
ln -s ../src kiubi
popd

echo "Bundle assets"
echo " - src"
cp ./src/index.html "./$dest"
echo " - build hash"
if [ -f ./src/BUILD ]; then
	BUILD_HASH=$(cat ./src/BUILD)
else
	BUILD_HASH=$(git rev-parse HEAD)
fi
echo '<!-- Build : '$BUILD_HASH' -->' >> "./$dest/index.html"

mkdir -p ./$dest/{locales,vendor,assets/css,assets/img}
if [ "$1" = "--no-map" ]; then
	uglifycss ./src/assets/css/*.css > "./$dest/assets/css/app.css"
else 
	cat ./src/assets/css/*.css > "./$dest/assets/css/app.css"
fi 
cp -r ./src/assets/img/* "./$dest/assets/img/"

echo " - bootstrap"
mkdir -p ./$dest/vendor/bootstrap/css
cp -r ./node_modules/bootstrap/dist/css/bootstrap.min.css ./$dest/vendor/bootstrap/css/
echo " - datetimepicker"
cat ./node_modules/pc-bootstrap4-datetimepicker/build/css/bootstrap-datetimepicker.min.css >> ./$dest/vendor/bootstrap/css/bootstrap.min.css
echo " - codemirror"
cat ./node_modules/codemirror/lib/codemirror.css >> ./$dest/vendor/bootstrap/css/bootstrap.min.css

echo " - tinymce"
mkdir -p ./$dest/vendor/tinymce/skins
cp -r ./node_modules/tinymce/skins/lightgray ./$dest/vendor/tinymce/skins/
if [ "$1" = "--no-map" ]; then
	uglifycss ./src/vendor/tinymce/skins/lightgray/content.css >> ./$dest/vendor/tinymce/skins/lightgray/content.min.css
	uglifycss ./src/vendor/tinymce/skins/lightgray/skin.css >> ./$dest/vendor/tinymce/skins/lightgray/skin.min.css
else
	cat ./src/vendor/tinymce/skins/lightgray/content.css >> ./$dest/vendor/tinymce/skins/lightgray/content.min.css
	cat ./src/vendor/tinymce/skins/lightgray/skin.css >> ./$dest/vendor/tinymce/skins/lightgray/skin.min.css
fi

echo "Bundle locales"

locales=""

for lang in $(ls ./src/locales); do
	echo " - $lang";

	browserify_options="";
	for LC_MESSAGE in $(ls ./src/locales/$lang/LC_MESSAGES/*.po); do
		# conversion des fichiers po en fichier json
		po2json ${LC_MESSAGE%.*}{.po,.json}

		# recupération du nom du fichier
		filename=$(basename $LC_MESSAGE);

		# nom du module require(..) sous lequel sera disponible le fichier
		module="locales_$lang/${filename%.*}";
		locales="$locales --exclude $module"

		browserify_options="$browserify_options -r ${LC_MESSAGE%.*}.json:$module";
	done;

	# Creation d'un fichier locales_$lang.js minifié
	browserify $browserify_options \
		-p [minifyify --no-map] -o "$dest/locales/$lang.js"
done;

echo "Bundle vendors"

output="${dest}/vendor/bundle.min.js";
if [ "$1" = "--no-map" ]; then
	minifyify="[minifyify --no-map]";
else
	minifyify="[minifyify --map bundle.min.js.map --output  ${dest}/vendor/bundle.min.js.map]";
fi

browserify -d -p ${minifyify} -o "${output}" \
	-r jquery                           \
	-r jquery.cookie                    \
	-r jquery-ui/ui/version				\
	-r jquery-ui/ui/ie					\
	-r jquery-ui/ui/scroll-parent		\
	-r jquery-ui/ui/safe-blur			\
	-r jquery-ui/ui/safe-active-element	\
	-r jquery-ui/ui/plugin				\
	-r jquery-ui/ui/data				\
	-r jquery-ui/ui/widget				\
	-r jquery-ui/ui/widgets/mouse		\
	-r jquery-ui/ui/widgets/sortable	\
	-r jquery-ui/ui/widgets/draggable	\
	-r bootstrap						\
	-r pc-bootstrap4-datetimepicker		\
	-r chart.js		                    \
	-r clipboard		                \
	-r codemirror		                \
	-r underscore                       \
	-r underscore.string                \
	-r backbone.marionette              \
	-r backbone							\
	-r moment						    \
	-r form-serialize					\
	-r tinymce							\
	-r tinymce/plugins/lists/plugin.js	     \
	-r tinymce/plugins/fullscreen/plugin.js	 \
	-r tinymce/plugins/paste/plugin.js	     \
	-r tinymce/plugins/charmap/plugin.js	 \
	-r tinymce/plugins/code/plugin.js	     \
	-r tinymce/plugins/anchor/plugin.js	     \
	-r tinymce/plugins/colorpicker/plugin.js \
	-r tinymce/plugins/image/plugin.js	     \
	-r tinymce/plugins/contextmenu/plugin.js \
	-r tinymce/plugins/textcolor/plugin.js	 \
	-r tinymce/plugins/table/plugin.js	     \
	-r tinymce/plugins/media/plugin.js	     \
	-r tinymce/themes/modern/theme.js	     \
	-r kiubi/vendor/tinymce/plugins/link/plugin.js \
	-r keypress.js

echo "Bundle Kiubi Back"

output="${dest}/app.js";

if [ "$1" = "--no-map" ]; then
	minifyify="[minifyify --no-map]";
else
	minifyify="[minifyify --map app.js.map --output  ${dest}/app.js.map]";
fi

browserify -d ./src/app.js              \
	--exclude jquery                    \
	--exclude jquery.cookie             \
	--exclude jquery-ui/ui/version				\
	--exclude jquery-ui/ui/ie					\
	--exclude jquery-ui/ui/scroll-parent		\
	--exclude jquery-ui/ui/safe-blur			\
	--exclude jquery-ui/ui/safe-active-element	\
	--exclude jquery-ui/ui/plugin				\
	--exclude jquery-ui/ui/data					\
	--exclude jquery-ui/ui/widget				\
	--exclude jquery-ui/ui/widgets/mouse		\
	--exclude jquery-ui/ui/widgets/sortable		\
	--exclude jquery-ui/ui/widgets/draggable	\
	--exclude bootstrap                 \
	--exclude pc-bootstrap4-datetimepicker          \
	--exclude chart.js		            \
	--exclude clipboard		            \
	--exclude codemirror	            \
	--exclude underscore                \
	--exclude underscore.string         \
	--exclude backbone.marionette       \
	--exclude backbone                  \
	--exclude moment                    \
	--exclude form-serialize        	\
	--exclude tinymce                   \
	--exclude tinymce/plugins/lists/plugin.js       \
	--exclude tinymce/plugins/fullscreen/plugin.js  \
	--exclude tinymce/plugins/paste/plugin.js       \
	--exclude tinymce/plugins/charmap/plugin.js     \
	--exclude tinymce/plugins/code/plugin.js        \
	--exclude tinymce/plugins/anchor/plugin.js      \
	--exclude tinymce/plugins/colorpicker/plugin.js \
	--exclude tinymce/plugins/image/plugin.js       \
	--exclude tinymce/plugins/contextmenu/plugin.js \
	--exclude tinymce/plugins/textcolor/plugin.js   \
	--exclude tinymce/plugins/table/plugin.js       \
	--exclude tinymce/plugins/media/plugin.js       \
	--exclude tinymce/themes/modern/theme.js        \
	--exclude kiubi/vendor/tinymce/plugins/link/plugin.js \
	--exclude keypress.js     \
	$locales                            \
	-p bundle-collapser/plugin          \
    -p ${minifyify} -o ${output}
