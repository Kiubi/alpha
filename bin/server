#!/usr/bin/env python

import os
import posixpath
import BaseHTTPServer
import SimpleHTTPServer
import urllib
import cgi
import shutil
import mimetypes

from StringIO import StringIO

class BusinessHTTPRequestHandler(SimpleHTTPServer.SimpleHTTPRequestHandler):
    def send_head(self):
        """Common code for GET and HEAD commands.

        This sends the response code and MIME headers.

        Return value is either a file object (which has to be copied
        to the outputfile by the caller unless the command was HEAD,
        and must be closed by the caller under all circumstances), or
        None, in which case the caller has nothing further to do.

        """
        path = self.translate_path(self.path)
        f = None
        if os.path.isdir(path):
            for index in "index.html", "index.htm":
                index = os.path.join(path, index)
                if os.path.exists(index):
                    path = index
                    break
            else:
                return self.list_directory(path)
        ctype = self.guess_type(path)
        if ctype.startswith('text/'):
            mode = 'r'
        else:
            mode = 'rb'
        try:
            f = open(path, mode)
        except IOError:
			if self.path == '':
				self.send_error(404, "File not found")
				return None
			self.path = ''
			return self.send_head()

        self.send_response(200)
        self.send_header("Content-type", ctype)
        self.end_headers()
        return f

def test(HandlerClass = BusinessHTTPRequestHandler,
         ServerClass = BaseHTTPServer.HTTPServer):
    BaseHTTPServer.test(HandlerClass, ServerClass)


if __name__ == '__main__':
    test()
